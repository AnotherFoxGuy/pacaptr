(function() {var implementors = {};
implementors["pacaptr"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"pacaptr/dispatch/config/struct.Config.html\" title=\"struct pacaptr::dispatch::config::Config\">Config</a>&gt; for <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"pacaptr/pm/trait.Pm.html\" title=\"trait pacaptr::pm::Pm\">Pm</a>&gt;","synthetic":false,"types":["alloc::boxed::Box"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.FromUtf8Error.html\" title=\"struct alloc::string::FromUtf8Error\">FromUtf8Error</a>&gt; for <a class=\"enum\" href=\"pacaptr/error/enum.Error.html\" title=\"enum pacaptr::error::Error\">Error</a>","synthetic":false,"types":["pacaptr::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"pacaptr/error/enum.Error.html\" title=\"enum pacaptr::error::Error\">Error</a>","synthetic":false,"types":["pacaptr::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"pacaptr/pm/enum.PmMode.html\" title=\"enum pacaptr::pm::PmMode\">PmMode</a>&gt; for <a class=\"enum\" href=\"pacaptr/exec/enum.Mode.html\" title=\"enum pacaptr::exec::Mode\">Mode</a>","synthetic":false,"types":["pacaptr::exec::Mode"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()