initSidebarItems({"enum":[["Mode","Different ways in which a [`Cmd`] shall be dealt with."]],"fn":[["exec_tee","Takes contents from an input stream and copy to an output stream (optional) and a [`Vec<u8>`], then returns the [`Vec<u8>`]."],["exit_result","Returns a [`Result`] for a [`Cmd`] according to if its exit status code indicates an error."],["grep","Finds all lines in the given `text` that matches all the `patterns`."],["grep_print","Prints the result of [`grep`] line by line."],["into_bytes","Turns an [`AsyncRead`] into a [`Stream`]."],["is_exe","Checks if an executable exists by name (consult `$PATH`) or by path."],["is_root","Returns `true` if user is root; `false` otherwise"],["prompt","Gives a prompt and returns one of the patterns matching the `stdin`. This action wonâ€™t end until an expected pattern is found."]],"macro":[["docs_errors_exec",""],["docs_errors_grep",""]],"struct":[["Cmd","A command to be executed, provided in `command-flags-keywords` form."]],"type":[["Output","The type for captured `stdout`, and if set to [`Mode::CheckAll`], mixed with captured `stderr`."],["StatusCode","The status code type returned by a [`Cmd`],"]]});