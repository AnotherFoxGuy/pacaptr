name: test

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  asi-build-test:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-apple-darwin
          override: true

      - name: Set macOS environment variables
        # if: runner.os == 'macOS'
        run: |
          echo "SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version)" >> $GITHUB_ENV

      - name: Build
        run: cargo build --verbose --release --locked --target=aarch64-apple-darwin

  musl-build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true

      - name: Build
        run: cargo build --verbose --release --locked --target=x86_64-unknown-linux-musl

  choco-test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test chocolatey --verbose
      - name: Run heavy tests
        run: cargo test chocolatey --verbose -- --ignored

  scoop-test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - uses: MinoruSekine/setup-scoop@v1
      - name: Verity scoop installation
        run: |
          powershell scoop help
          Get-Command scoop
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test scoop --verbose
      - name: Run heavy tests
        run: cargo test scoop --verbose -- --ignored

  homebrew-test:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test homebrew --verbose
      - name: Run heavy tests
        run: cargo test homebrew --verbose -- --ignored

  apt-test:
    runs-on: ubuntu-latest
    container:
      image: docker://rust:latest

    steps:
      - uses: actions/checkout@v2
      - run: apt-get update && apt-get install -y curl build-essential
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test apt --verbose
      - name: Run heavy tests
        run: cargo test apt --verbose -- --ignored

  dnf-test:
    runs-on: ubuntu-latest
    container:
      image: docker://fedora:latest

    steps:
      - uses: actions/checkout@v2
      - run: dnf install -y make automake gcc gcc-c++ kernel-devel
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test dnf --verbose
      - name: Run heavy tests
        run: cargo test dnf --verbose -- --ignored

  zypper-test:
    runs-on: ubuntu-latest
    container:
      image: docker://opensuse/leap:latest
    defaults:
      run:
        shell: sh

    steps:
      - run: zypper install -y tar gzip curl gcc
      - uses: actions/checkout@v2
      - name: Set up Rust environment manually
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      # - run: echo "::add-path::$HOME/.cargo/bin"
      - name: Build
        run: $HOME/.cargo/bin/cargo build --verbose
      - name: Run unit tests
        run: $HOME/.cargo/bin/cargo test tests --verbose
      - name: Run smoke tests
        run: $HOME/.cargo/bin/cargo test zypper --verbose -- --test-threads=1
      - name: Run heavy tests
        run: $HOME/.cargo/bin/cargo test zypper --verbose -- --ignored --test-threads=1

  apk-test:
    runs-on: ubuntu-latest
    container:
      image: docker://rust:alpine

    steps:
      - uses: actions/checkout@v2
      - uses: dtolnay/rust-toolchain@stable
      - run: apk add -U build-base
      - name: Build
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo build --verbose
      - name: Run unit tests
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo test tests --verbose
      - name: Run smoke tests
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo test apk --verbose
      - name: Run heavy tests
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo test apk --verbose -- --ignored
