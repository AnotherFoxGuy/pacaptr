name: test

on:
  pull_request:
  push:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  choco-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test choco --verbose
      - name: Run heavy tests
        run: cargo test choco --verbose -- --ignored

  scoop-test:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - uses: MinoruSekine/setup-scoop@v1
      - name: Verity scoop installation
        run: |
          powershell scoop help
          Get-Command scoop
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test scoop --verbose
      - name: Run heavy tests
        run: cargo test scoop --verbose -- --ignored

  brew-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-apple-darwin
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Set macOS environment variables
        # if: runner.os == 'macOS'
        run: |
          echo "SDKROOT=$(xcrun -sdk macosx11.1 --show-sdk-path)" >> $GITHUB_ENV
          echo "MACOSX_DEPLOYMENT_TARGET=$(xcrun -sdk macosx11.1 --show-sdk-platform-version)" >> $GITHUB_ENV
      - name: Test build for aarch64
        run: cargo build --verbose --release --locked --target=aarch64-apple-darwin
      - name: Test native build
        run: cargo build --verbose
      # - run: brew list
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test brew --verbose
      - name: Run heavy tests
        run: cargo test brew --verbose -- --ignored

  port-test:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get OS build
        run: |
          sw_vers > macos_build.txt
          cat macos_build.txt
      - name: Cache MacPorts
        id: cache-macports
        # uses: actions/cache@v2
        uses: john-shaffer/cache@sudo-tar
        with:
          path: /opt/local/
          key: ${{ runner.os }}-macports-${{ hashFiles('macos_build.txt') }}
      - name: Restore MacPorts PATH
        if: steps.cache-macports.outputs.cache-hit == 'true'
        run: echo "/opt/local/bin" >> "$GITHUB_PATH"
      - name: Install MacPorts
        if: steps.cache-macports.outputs.cache-hit != 'true'
        run: |
          curl -LO https://raw.githubusercontent.com/GiovanniBussi/macports-ci/master/macports-ci
          source ./macports-ci install
          sudo port install wget
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --verbose
      - run: port installed
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test port --verbose
      - name: Run heavy tests
        run: cargo test port --verbose -- --ignored

  apt-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # - run: apt-get update && apt-get install -y curl build-essential
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Test build for musl
        run: cargo build --verbose --release --locked --target=x86_64-unknown-linux-musl
      - name: Test native build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test apt --verbose
      - name: Run heavy tests
        run: cargo test apt --verbose -- --ignored

  dnf-test:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/checkout@v2
      - run: dnf install -y make automake gcc gcc-c++ kernel-devel
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test dnf --verbose
      - name: Run heavy tests
        run: cargo test dnf --verbose -- --ignored

  emerge-test:
    runs-on: ubuntu-latest
    container:
      image: gentoo/stage3
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      # `pacaptr -Ss` might fail without this line.
      - run: emerge --sync || true
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test emerge --verbose
      - name: Run heavy tests
        run: cargo test emerge --verbose -- --ignored

  xbps-test:
    runs-on: ubuntu-latest
    container:
      image: voidlinux/voidlinux:latest
    steps:
      - name: Install required packages
        run: |
          xbps-install -y -Su
          xbps-install -y base-devel curl
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test xbps --verbose
      - name: Run heavy tests
        run: cargo test xbps --verbose -- --ignored

  zypper-test:
    runs-on: ubuntu-latest
    container:
      image: opensuse/leap:latest
    defaults:
      run:
        shell: sh
    steps:
      - run: zypper install -y tar gzip curl gcc
      - uses: actions/checkout@v2
      - name: Set up Rust environment manually
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      # - run: echo "::add-path::$HOME/.cargo/bin"
      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: $HOME/.cargo/bin/cargo build --verbose
      - name: Run unit tests
        run: $HOME/.cargo/bin/cargo test tests --verbose
      - name: Run smoke tests
        run: $HOME/.cargo/bin/cargo test zypper --verbose -- --test-threads=1
      - name: Run heavy tests
        run: $HOME/.cargo/bin/cargo test zypper --verbose -- --ignored --test-threads=1

  apk-test:
    runs-on: ubuntu-latest
    container:
      image: rust:alpine
    env:
      RUSTFLAGS: "-C target-feature=-crt-static"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: apk add -U build-base
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test apk --verbose
      - name: Run heavy tests
        run: cargo test apk --verbose -- --ignored

  pip-conda-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Build
        run: cargo build --verbose
      # - name: Run unit tests
      #   run: cargo test tests --verbose
      - name: Run smoke tests
        run: |
          cargo test pip --verbose
          cargo test conda --verbose
      - name: Run heavy tests
        run: |
          cargo test pip --verbose -- --ignored
          cargo test conda --verbose -- --ignored
