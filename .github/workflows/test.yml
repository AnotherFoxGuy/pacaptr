name: test

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  windows-test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run heavy tests
        run: cargo test --verbose -- --ignored

  macos-test:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: cargo test --verbose
      - name: Run heavy tests
        run: cargo test --verbose -- --ignored

  debian-test:
    runs-on: ubuntu-latest
    container:
      image: docker://debian:testing

    steps:
      - uses: actions/checkout@v2
      - run: apt-get update && apt-get install -y curl build-essential
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test apt --verbose
      - name: Run heavy tests
        run: cargo test apt --verbose -- --ignored

  fedora-test:
    runs-on: ubuntu-latest
    container:
      image: docker://fedora:latest

    steps:
      - uses: actions/checkout@v2
      - run: dnf install -y make automake gcc gcc-c++ kernel-devel
      - uses: dtolnay/rust-toolchain@stable
      - name: Build
        run: cargo build --verbose
      - name: Run unit tests
        run: cargo test tests --verbose
      - name: Run smoke tests
        run: cargo test dnf --verbose
      - name: Run heavy tests
        run: cargo test dnf --verbose -- --ignored

  opensuse-test:
    runs-on: ubuntu-latest
    container:
      image: docker://opensuse/leap:latest
    defaults:
      run:
        shell: sh

    steps:
      - run: zypper install -y tar gzip curl gcc
      - uses: actions/checkout@v2
      - name: Set up Rust environment manually
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      # - run: echo "::add-path::$HOME/.cargo/bin"
      - name: Build
        run: $HOME/.cargo/bin/cargo build --verbose
      - name: Run unit tests
        run: $HOME/.cargo/bin/cargo test tests --verbose
      - name: Run smoke tests
        run: $HOME/.cargo/bin/cargo test zypper --verbose -- --test-threads=1
      - name: Run heavy tests
        run: $HOME/.cargo/bin/cargo test zypper --verbose -- --ignored --test-threads=1

  alpine-test:
    runs-on: ubuntu-latest
    container:
      image: docker://rust:alpine

    steps:
      - uses: actions/checkout@v2
      # - uses: dtolnay/rust-toolchain@stable
      - run: apk add -U build-base
      - name: Build
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo build --verbose
      - name: Run unit tests
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo test tests --verbose
      - name: Run smoke tests
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo test apk --verbose
      - name: Run heavy tests
        run: RUSTFLAGS="-C target-feature=-crt-static" cargo test apk --verbose -- --ignored
